x = "Classi di Età",
y = "Numero di persone") +
theme_minimal()
#Plottiamo quante persone hanno avuto un ecg normale quanti anormale e quanti invece hanno avuto ipertrofia ventricolare
ggplot(life_heart, aes(x = restecg, fill = sex)) +
geom_bar(color = "blue", position = position_dodge(preserve = "single")) +
labs(title = "Distribuzione delle età per classe",
x = "Classi di Età",
y = "Numero di persone") +
theme_minimal()
#Plottiamo quante persone hanno avuto un ecg normale quanti anormale e quanti invece hanno avuto ipertrofia ventricolare
ggplot(life_heart, aes(x = restecg, fill = sex)) +
geom_bar(color = "black", position = position_dodge(preserve = "single")) +
labs(title = "Distribuzione delle età per classe",
x = "Classi di Età",
y = "Numero di persone") +
theme_minimal()
#Plottiamo quante persone hanno avuto un ecg normale quanti anormale e quanti invece hanno avuto ipertrofia ventricolare
ggplot(life_heart, aes(x = factor(restecg), fill = factor(sex))) +
geom_bar(color = "black", position = position_dodge(preserve = "single")) +
labs(title = "Distribuzione dei risultati ECG a riposo per sesso",
x = "Tipologia di ECG a riposo",
y = "Conteggio") +
theme_minimal()
library(dplyr)
library(ggplot2)
library(ggsci)
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
tail(life_heart)
which(is.na(life_heart))
sum(is.na(life_heart))    # sembra non ci siano valori mancanti nel dataset.
unique(life_heart$sex)  #funzione fondamentale per ispezionare variabili che risultano con tante categorie o valori
distinct(life_heart,sex,cp,restecg,fbs,exang,slope,thal) #variabili qualitative
ggplot(life_heart, aes(x = factor(sex), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3,4),  # Specifica esplicitamente i livelli
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico", y = "Proporzione") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
life_heart$restecg=factor(life_heart$restecg, levels = c(0,1,2), labels=c("normale","anormale","ipertofia ventricolare"))
#Plottiamo quante persone hanno avuto un ecg normale quanti anormale e quanti invece hanno avuto ipertrofia ventricolare
ggplot(life_heart, aes(x = factor(restecg), fill = factor(sex))) +
geom_bar(color = "black", position = position_dodge(preserve = "single")) +
labs(title = "Distribuzione dei risultati ECG a riposo per sesso",
x = "Tipologia di ECG a riposo",
y = "Conteggio") +
theme_minimal()
ggplot(life_heart, aes(x = factor(fbs, labels=c("<120 ",">120")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione del numero di infarti in base ai livelli di glicemia",
x = "Valori della glicemia a digiuno", y = "Proporzione") +
theme_minimal()
ggplot(life_heart, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "black") +
labs(title = "Istogramma dell'età", x = "età", y = "frequenze") +
theme_minimal()
#CALCOLO DELLA MATRICI DI CORRELAZIONE:
df_corr=life_heart %>% dplyr::select(age,trestbps,chol,thalach,oldpeak)
sum(is.na(df_corr))
cor_matrix=cor(df_corr)
print(cor_matrix)
ggcorrplot(cor_matrix,
method = "square",
type = "lower",
hc.order = TRUE,
lab = TRUE,
colors = c("blue", "white", "red"))+
ggtitle("Matrice di Correlazione delle Variabili Quantitative") +
theme(plot.title = element_text(hjust = 0.5))
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
tail(life_heart)
which(is.na(life_heart))
life_heart = read.csv(file="heart.csv", header=FALSE, sep=",")
library(dplyr)
library(ggplot2)
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
which(is.na(life_heart))
sum(is.na(life_heart))    # sembra non ci siano valori mancanti nel dataset.
unique(life_heart$sex)  #funzione fondamentale per ispezionare variabili che risultano con tante categorie o valori
distinct(life_heart,sex,cp,restecg,fbs,exang,slope,thal) #variabili qualitative
ggplot(life_heart, aes(x = factor(sex), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3,4),  # Specifica esplicitamente i livelli
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico", y = "Proporzione") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
life_heart$restecg=factor(life_heart$restecg, levels = c(0,1,2), labels=c("normale","anormale","ipertofia ventricolare"))
#Plottiamo quante persone hanno avuto un ecg normale quanti anormale e quanti invece hanno avuto ipertrofia ventricolare
ggplot(life_heart, aes(x = factor(restecg), fill = factor(sex))) +
geom_bar(color = "black", position = position_dodge(preserve = "single")) +
labs(title = "Distribuzione dei risultati ECG a riposo per sesso",
x = "Tipologia di ECG a riposo",
y = "Conteggio") +
theme_minimal()
ggplot(life_heart, aes(x = factor(fbs, labels=c("<120 ",">120")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione del numero di infarti in base ai livelli di glicemia",
x = "Valori della glicemia a digiuno", y = "Proporzione") +
theme_minimal()
ggplot(life_heart, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "black") +
labs(title = "Istogramma dell'età", x = "età", y = "frequenze") +
theme_minimal()
#CALCOLO DELLA MATRICI DI CORRELAZIONE:
df_corr=life_heart %>% dplyr::select(age,trestbps,chol,thalach,oldpeak)
sum(is.na(df_corr))
cor_matrix=cor(df_corr)
print(cor_matrix)
ggcorrplot(cor_matrix,
method = "square",
type = "lower",
hc.order = TRUE,
lab = TRUE,
colors = c("blue", "white", "red"))+
ggtitle("Matrice di Correlazione delle Variabili Quantitative") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = eta_classi, y = age, fill = eta_classi)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16) +
geom_jitter(width = 0.2, color = "darkred", alpha = 0.6) +
labs(title = "Boxplot variabile età", x = "Classi di Età", y = "Età") +
scale_fill_jco() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
unique(c(life_heart$sex,life_heart$cp))
unique(life_heart$cp)
head(life_heart$cp)
ggplot(life_heart, aes(x = factor(sex,labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
unique(life_heart$sex)
head(life_heart$sex)
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
install.packages(rgl)
library("rgl")
install.packages(rgl)
install.packages("rgl")
library(rgl)
plot3d(life_heart$age,life_heart$sex,life_heart$num)
colori_scala <- rainbow(length(unique(colori)))[as.factor(colori)]
plot3d(life_heart$age,life_heart$sex,life_heart$num,col = colori_scala)
colori_scala <- rainbow(length(unique(colori)))[as.factor(colori)]
colori_scala
colori
plot3d(life_heart$age,life_heart$sex,life_heart$num,col = colori_scala)
color=c("red","blue","yellow")
colori_scala <- rainbow(length(unique(colori)))[as.factor(colori)]
colori=c("red","blue","yellow")
colori_scala <- rainbow(length(unique(colori)))[as.factor(colori)]
plot3d(life_heart$age,life_heart$sex,life_heart$num,col = colori_scala)
colori=c("red","blue","yellow")
colori_scala <- rainbow(length(unique(colori)))[as.factor(colori)]
plot3d(life_heart$age,life_heart$sex,life_heart$num,col = colori_scala)
#GRAFICO 3D
colori=c("red","blue","yellow")
ggplot(life_heart, aes(x = age, y = factor(sex), color = factor(num))) +
geom_jitter(alpha = 0.6, width = 0.2) +
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Sesso (0 = Donna, 1 = Uomo)",
color = "Numero di infarti") +
theme_minimal()
life_heart = read.csv(file="heart.csv", header=FALSE, sep=",")
library(dplyr)
library(ggplot2)
library(ggsci)
install.packages("rgl")
library(rgl)
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
tail(life_heart)
which(is.na(life_heart))
sum(is.na(life_heart))    # sembra non ci siano valori mancanti nel dataset.
unique(life_heart$sex)  #funzione fondamentale per ispezionare variabili che risultano con tante categorie o valori
distinct(life_heart,sex,cp,restecg,fbs,exang,slope,thal) #variabili qualitative
unique(life_heart$cp)
head(life_heart$cp)
unique(life_heart$sex)
head(life_heart$sex)
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
tail(life_heart)
which(is.na(life_heart))
sum(is.na(life_heart))    # sembra non ci siano valori mancanti nel dataset.
unique(life_heart$sex)  #funzione fondamentale per ispezionare variabili che risultano con tante categorie o valori
distinct(life_heart,sex,cp,restecg,fbs,exang,slope,thal) #variabili qualitative
unique(life_heart$cp)
head(life_heart$cp)
unique(life_heart$sex)
head(life_heart$sex)
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
unique(life_heart$sex)
head(life_heart$sex)
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
library(dplyr)
library(ggplot2)
library(ggsci)
library(rgl)
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
tail(life_heart)
which(is.na(life_heart))
sum(is.na(life_heart))    # sembra non ci siano valori mancanti nel dataset.
unique(life_heart$sex)  #funzione fondamentale per ispezionare variabili che risultano con tante categorie o valori
distinct(life_heart,sex,cp,restecg,fbs,exang,slope,thal) #variabili qualitative
unique(life_heart$cp)
head(life_heart$cp)
unique(life_heart$sex)
head(life_heart$sex)
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
ggplot(life_heart, aes(x = age, y = factor(sex), color = factor(num))) +
geom_jitter(alpha = 0.6, width = 0.2) +
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Sesso (1= Donna, 0 = Uomo)",
color = "Numero di infarti") +
theme_minimal()
ggplot(life_heart, aes(x = age, fill = factor(num))) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
facet_grid(. ~ sex) +  # Divide il grafico in due, per maschi e femmine
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Conteggio",
fill = "Numero di infarti") +
theme_minimal()
life_heart <- life_heart %>%
mutate(sex_label = factor(sex, levels = c(0, 1), labels = c("Donna", "Uomo")))
# Grafico con facet_grid
ggplot(life_heart, aes(x = age, fill = factor(num))) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
facet_grid(. ~ sex_label) +  # Usa la variabile con etichette personalizzate
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Conteggio",
fill = "Numero di infarti") +
theme_minimal()
life_heart <- life_heart %>%
mutate(sex_label = factor(sex, levels = c(1, 0), labels = c("Donna", "Uomo")))
# Grafico con facet_grid
ggplot(life_heart, aes(x = age, fill = factor(num))) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
facet_grid(. ~ sex_label) +  # Usa la variabile con etichette personalizzate
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Conteggio",
fill = "Numero di infarti") +
theme_minimal()
life_heart <- life_heart %>%
mutate(sex_label = factor(sex, levels = c(1, 0), labels = c("Uomo", "Donna")))
# Grafico con facet_grid
ggplot(life_heart, aes(x = age, fill = factor(num))) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
facet_grid(. ~ sex_label) +  # Usa la variabile con etichette personalizzate
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Conteggio",
fill = "Numero di infarti") +
theme_minimal()
# Grafico con facet_grid
ggplot(life_heart, aes(x = age, fill = factor(num))) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
facet_grid(. ~ sex_label) +  # Usa la variabile con etichette personalizzate
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Conteggio",
fill = "Numero di infarti")+
scale_fill_manual(values = c("0" = "#1f77b4", "1" = "#d62728"))+  # Blu e rosso scuro
theme_minimal()
# Grafico con facet_grid
ggplot(life_heart, aes(x = age, fill = factor(num))) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
facet_grid(. ~ sex_label) +  # Divide il grafico per sesso
labs(title = "Distribuzione dell'età per sesso e numero di infarti",
x = "Età",
y = "Conteggio",
fill = "Numero di infarti") +
scale_fill_manual(values = c("0" = "#1f77b4",  # Blu
"1" = "#ff7f0e",  # Arancione
"2" = "#2ca02c",  # Verde
"3" = "#d62728",  # Rosso
"4" = "#9467bd")) +  # Viola
theme_minimal()
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3,4),  # Specifica esplicitamente i livelli
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico", y = "Proporzione") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
#Plottiamo quante persone hanno avuto un ecg normale quanti anormale e quanti invece hanno avuto ipertrofia ventricolare
ggplot(life_heart, aes(x = factor(restecg), fill = factor(sex))) +
geom_bar(color = "black", position = position_dodge(preserve = "single")) +
labs(title = "Distribuzione dei risultati ECG a riposo per sesso",
x = "Tipologia di ECG a riposo",
y = "Conteggio") +
theme_minimal()
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3,4),  # Specifica esplicitamente i livelli
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico", y = "Proporzione") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3, 4),
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "stack") +  # Stack per le frequenze assolute
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico",
y = "Frequenza assoluta",
fill = "Numero di infarti") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3, 4),
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "stack") +  # Stack per le frequenze assolute
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico",
y = "Frequenza assoluta",
fill = "Numero di infarti") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
facet_wrap(~ sex, labeller = labeller(sex = c("0" = "Donna", "1" = "Uomo")))  # Aggiungi la divisione per sesso
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3, 4),
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "fill") +  # Stack per le frequenze assolute
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico",
y = "Frequenza assoluta",
fill = "Numero di infarti") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
facet_wrap(~ sex, labeller = labeller(sex = c("0" = "Donna", "1" = "Uomo")))  # Aggiungi la divisione per sesso
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3, 4),
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "stack") +  # Stack per le frequenze assolute
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico",
y = "Frequenza assoluta",
fill = "Numero di infarti") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
facet_wrap(~ sex, labeller = labeller(sex = c("0" = "Donna", "1" = "Uomo")))  # Aggiungi la divisione per sesso
unique(life_heart$sex)
head(life_heart$sex)
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "fill") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "stack") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
table(life_heart$sex)
#vediamo la distribuzione del numero di infarti rispetto al tipo di dolore
ggplot(life_heart, aes(x = factor(cp,
levels = c(1, 2, 3, 4),
labels = c("Dolore toracico",
"Dolore toracico anomalo",
"Dolore toracico non dovuto a malattia cardiaca",
"Asintomatico")),
fill = factor(num))) +
geom_bar(position = "stack") +  # Stack per le frequenze assolute
labs(title = "Distribuzione della malattia cardiaca per tipo di dolore toracico",
x = "Tipo di dolore toracico",
y = "Frequenza assoluta",
fill = "Numero di infarti") +
scale_fill_manual(values = c("0" = "#1f77b4",  # Blu
"1" = "#ff7f0e",  # Arancione
"2" = "#2ca02c",  # Verde
"3" = "#d62728",  # Rosso
"4" = "#9467bd")) +  # Viola
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
facet_wrap(~ sex, labeller = labeller(sex = c("0" = "Donna", "1" = "Uomo")))  # Aggiungi la divisione per sesso
life_heart = read.csv(file="heart.csv", header=FALSE, sep=",")
library(dplyr)
library(ggplot2)
library(ggsci)
library(rgl)
#---------------------------------------------------------------------------------#
# 2) Aggiunta del nome delle colonne al dataframe:
names(life_heart) <- c("age", "sex", "cp", "trestbps", "chol","fbs", "restecg","thalach","exang", "oldpeak","slope", "ca", "thal", "num")
str(life_heart)
tail(life_heart)
which(is.na(life_heart))
sum(is.na(life_heart))    # sembra non ci siano valori mancanti nel dataset.
unique(life_heart$sex)  #funzione fondamentale per ispezionare variabili che risultano con tante categorie o valori
distinct(life_heart,sex,cp,restecg,fbs,exang,slope,thal) #variabili qualitative
unique(life_heart$cp)
head(life_heart$cp)
unique(life_heart$sex)
head(life_heart$sex)
table(life_heart$sex)  #nel dataset sono presenti 206 uomini e 97 donne
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "stack") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
theme_minimal()
ggplot(life_heart, aes(x = factor(sex,levels=c(1,0),labels = c("Maschio","Femmina")), fill = factor(num))) +
geom_bar(position = "stack") +
labs(title = "Distribuzione della malattia cardiaca per sesso",
x = "Sesso", y = "Proporzione") +
scale_fill_manual(values = c("0" = "#1f77b4",  # Blu
"1" = "#ff7f0e",  # Arancione
"2" = "#2ca02c",  # Verde
"3" = "#d62728",  # Rosso
"4" = "#9467bd")) +  # Viola
theme_minimal()
